"use strict";(self.webpackChunkfig_doc=self.webpackChunkfig_doc||[]).push([[78],{6729:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var t=s(4848),r=s(8453);const a={},i=void 0,o={id:"tutorial-basics/Arrays",title:"Arrays",description:"Arrays in Fig allow you to store and manipulate collections of elements. This document outlines the basic operations and usage of arrays in Fig.",source:"@site/docs/tutorial-basics/Arrays.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/Arrays",permalink:"/book/docs/tutorial-basics/Arrays",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/Arrays.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Variables",permalink:"/book/docs/tutorial-basics/Variables"},next:{title:"Comments",permalink:"/book/docs/tutorial-basics/Comments"}},c={},l=[{value:"Creating Arrays",id:"creating-arrays",level:2},{value:"Accessing Elements",id:"accessing-elements",level:2},{value:"Modifying Elements",id:"modifying-elements",level:2},{value:"Array Length",id:"array-length",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Arrays in Fig allow you to store and manipulate collections of elements. This document outlines the basic operations and usage of arrays in Fig."}),"\n",(0,t.jsx)(n.h2,{id:"creating-arrays",children:"Creating Arrays"}),"\n",(0,t.jsxs)(n.p,{children:["Arrays in Fig can be created using square brackets ",(0,t.jsx)(n.code,{children:"[]"}),", enclosing a comma-separated list of elements:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:'let numbers = [1, 2, 3, 4, 5];\nlet fruits = ["apple", "banana", "orange"];\n'})}),"\n",(0,t.jsx)(n.h2,{id:"accessing-elements",children:"Accessing Elements"}),"\n",(0,t.jsx)(n.p,{children:"You can access elements of an array using square brackets [] with the index of the element you want to access. Array indices are zero-based:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"let numbers = [1, 2, 3, 4, 5];\nlet firstNumber = numbers[0]; // Accesses the first element (1)\nlet secondNumber = numbers[1]; // Accesses the second element (2)\n"})}),"\n",(0,t.jsx)(n.h2,{id:"modifying-elements",children:"Modifying Elements"}),"\n",(0,t.jsx)(n.p,{children:"You can modify elements of an array by assigning a new value to a specific index:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"\nlet numbers = [1, 2, 3, 4, 5];\nnumbers[0] = 10; // Modifies the first element to 10\n"})}),"\n",(0,t.jsx)(n.h2,{id:"array-length",children:"Array Length"}),"\n",(0,t.jsx)(n.p,{children:"The length of an array can be obtained using the len function from the standard library:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"import std;\n\nexport fn main() {\n    let numbers = [1, 2, 3, 4, 5];\n    let length = len(numbers); // Returns the length of the array (5)\n}\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>o});var t=s(6540);const r={},a=t.createContext(r);function i(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);
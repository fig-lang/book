"use strict";(self.webpackChunkfig_doc=self.webpackChunkfig_doc||[]).push([[581],{5610:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Fig introduction","href":"/book/docs/Fig introduction","docId":"Fig introduction","unlisted":false},{"type":"link","label":"Installation","href":"/book/docs/Installation","docId":"Installation","unlisted":false},{"type":"link","label":"Hello World","href":"/book/docs/Hello World","docId":"Hello World","unlisted":false},{"type":"category","label":"Tutorial - Basics","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Variables","href":"/book/docs/tutorial-basics/Variables","docId":"tutorial-basics/Variables","unlisted":false},{"type":"link","label":"Comments","href":"/book/docs/tutorial-basics/Comments","docId":"tutorial-basics/Comments","unlisted":false},{"type":"link","label":"Control flow","href":"/book/docs/tutorial-basics/Control flow","docId":"tutorial-basics/Control flow","unlisted":false},{"type":"link","label":"Data Types","href":"/book/docs/tutorial-basics/Data Types","docId":"tutorial-basics/Data Types","unlisted":false},{"type":"link","label":"External Statement","href":"/book/docs/tutorial-basics/External Statement","docId":"tutorial-basics/External Statement","unlisted":false},{"type":"link","label":"Functions","href":"/book/docs/tutorial-basics/Functions","docId":"tutorial-basics/Functions","unlisted":false},{"type":"link","label":"Import","href":"/book/docs/tutorial-basics/Import","docId":"tutorial-basics/Import","unlisted":false}],"href":"/book/docs/category/tutorial---basics"}]},"docs":{"Fig introduction":{"id":"Fig introduction","title":"Fig introduction","description":"Fig is a modern, high-level programming language designed to harness the power and versatility of Web Assembly (Wasm) across both backend and frontend development. With Fig, developers can write concise and expressive code that seamlessly compiles to efficient and portable Wasm bytecode, enabling unparalleled flexibility in application deployment.","sidebar":"tutorialSidebar"},"Hello World":{"id":"Hello World","title":"Hello World","description":"To create a simple \\"Hello World\\" program in Fig, follow these steps:","sidebar":"tutorialSidebar"},"Installation":{"id":"Installation","title":"Installation","description":"To install FigLang on your Linux or MacOS machine, you can use the following bash command:","sidebar":"tutorialSidebar"},"tutorial-basics/Comments":{"id":"tutorial-basics/Comments","title":"Comments","description":"Comments in Fig are used to add explanatory notes or documentation to the code. There are two types of comments:","sidebar":"tutorialSidebar"},"tutorial-basics/Control flow":{"id":"tutorial-basics/Control flow","title":"Control flow","description":"Control flow statements in Fig are used to control the execution of code based on conditions or loops. Here are some common control flow statements:","sidebar":"tutorialSidebar"},"tutorial-basics/Data Types":{"id":"tutorial-basics/Data Types","title":"Data Types","description":"Fig supports various data types for representing different kinds of values. Here are some commonly used data types:","sidebar":"tutorialSidebar"},"tutorial-basics/External Statement":{"id":"tutorial-basics/External Statement","title":"External Statement","description":"The external statement allows you to import functions from the host language environment, such as JavaScript, which can be executed within the WebAssembly (WASM) environment. This enables Fig to interact with the host environment seamlessly.","sidebar":"tutorialSidebar"},"tutorial-basics/Functions":{"id":"tutorial-basics/Functions","title":"Functions","description":"Functions in Fig are blocks of code that perform a specific task. They are declared using the fn keyword followed by the function name, parameters (if any), and return type (if any). Here\'s the general syntax for defining a function:","sidebar":"tutorialSidebar"},"tutorial-basics/Import":{"id":"tutorial-basics/Import","title":"Import","description":"Fig allows you to import modules or files using the import statement. This enables you to reuse code from other files or standard libraries. For example:","sidebar":"tutorialSidebar"},"tutorial-basics/Variables":{"id":"tutorial-basics/Variables","title":"Variables","description":"Variables in Fig are used to store and manipulate data. There are two types of variables:","sidebar":"tutorialSidebar"}}}')}}]);
"use strict";(self.webpackChunkfig_doc=self.webpackChunkfig_doc||[]).push([[413],{6590:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>n,metadata:()=>o,toc:()=>c});var s=t(4848),r=t(8453);const n={sidebar_position:1},i=void 0,o={id:"tutorial-basics/Variables",title:"Variables",description:"Variables in Fig are used to store and manipulate data. There are two types of variables:",source:"@site/docs/tutorial-basics/Variables.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/Variables",permalink:"/book/docs/tutorial-basics/Variables",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/Variables.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Tutorial - Basics",permalink:"/book/docs/category/tutorial---basics"},next:{title:"Arrays",permalink:"/book/docs/tutorial-basics/Arrays"}},l={},c=[{value:"Mutable Variables",id:"mutable-variables",level:3},{value:"Immutable Variables (const)",id:"immutable-variables-const",level:3}];function d(e){const a={code:"code",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.p,{children:"Variables in Fig are used to store and manipulate data. There are two types of variables:"}),"\n",(0,s.jsx)(a.h3,{id:"mutable-variables",children:"Mutable Variables"}),"\n",(0,s.jsxs)(a.p,{children:["Mutable variables allow their values to be changed after they have been declared using the ",(0,s.jsx)(a.code,{children:"let"})," keyword."]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-rust",children:"let x = 10;\nx = 20; // Valid - x can be changed\n"})}),"\n",(0,s.jsx)(a.h3,{id:"immutable-variables-const",children:"Immutable Variables (const)"}),"\n",(0,s.jsx)(a.p,{children:"Immutable variables have constant values that cannot be changed once assigned. They are declared using the const keyword and only support static-sized values and types."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-rust",children:"const PI: f64 = 3.14159;\n"})}),"\n",(0,s.jsx)(a.p,{children:"You can also use const with array and string types:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-rust",children:'const ARRAY: i32[] = [1, 2, 3, 4, 5];\nconst STRING: char[] = "Hello, World!";\n'})})]})}function u(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,a,t)=>{t.d(a,{R:()=>i,x:()=>o});var s=t(6540);const r={},n=s.createContext(r);function i(e){const a=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(n.Provider,{value:a},e.children)}}}]);